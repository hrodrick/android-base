plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"

}

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.rootstrap.android"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 42
        versionName "1.0"
        testInstrumentationRunner "com.rootstrap.android.CustomTestRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    signingConfigs {
        releaseConfig {
            keyAlias projectKeyAlias
            keyPassword projectKeyPassword
            storeFile file(projectStoreFile)
            storePassword projectStorePassword
        }
    }

    buildTypes {
        getByName("debug") {
            applicationIdSuffix = ".debug"
            versionNameSuffix "-debug"
            minifyEnabled false
            buildConfigField("String", "API_URL", "\"https://rails5-api-base.herokuapp.com/api/v1/\"")
            buildConfigField("String", "SECURE_KEY_ALIAS", "\"$projectKeyAlias\"")
            buildConfigField("String", "SECURE_FILE_NAME", "\"appPreferencesDev\"")
        }

        create("staging") {
            initWith(getByName("debug"))
            applicationIdSuffix = ".staging"
            initWith(getByName("debug"))
            buildConfigField("String", "API_URL", "\"https://proj-staging.herokuapp.com/api/\"")
            buildConfigField("String", "SECURE_FILE_NAME", "\"appPreferencesStaging\"")
        }

        getByName("release") {
            signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_URL", "\"https://proj-production.herokuapp.com/api/\"")
            buildConfigField("String", "SECURE_KEY_ALIAS", "\"$projectKeyAlias\"")
            buildConfigField("String", "SECURE_FILE_NAME", "\"appPreferences\"")
        }
    }

    kapt {
        correctErrorTypes true
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def apk = output.outputFile
            def newName = apk.name.replace(".apk", "-v" + variant.versionName + ".apk")
            newName = newName.replace("-" + variant.buildType.name, "")

            outputFileName = new File("./apks/" + newName)
        }
    }

    configurations {
        ktlint
    }

    kotlinOptions {
        freeCompilerArgs = ["-Xallow-result-return-type"]
    }

    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "src/**/*.kt"
        // to generate report in checkstyle format prepend following args:
        // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
        // see https://github.com/pinterest/ktlint#usage for more
    }

    check.dependsOn ktlint

    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "-F", "src/**/*.kt"
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    testOptions {
        unitTests {
            includeAndroidResources = true
            animationsDisabled = true
        }
    }
}

dependencies {

    implementation project(":data")
    implementation project(":domain")
    implementation project(":usecases")

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation androidLibs.values()
    implementation androidDataLibs.values()
    implementation kotlinLibs.values()
    implementation platform(Libs.firebaseBom)
    implementation libs.values()
    kapt androidKaptLibs.values()
    ktlint ktlintLibs.values()
    testImplementation testLibs.values()
    androidTestImplementation androidTestLibs.values()
}
